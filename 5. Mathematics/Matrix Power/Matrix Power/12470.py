import sys

def mul(M1, M2):
    return [
        [
            (M1[0][0]*M2[0][0] + M1[0][1]*M2[1][0] + M1[0][2]*M2[2][0]) % 1000000009,
            (M1[0][0]*M2[0][1] + M1[0][1]*M2[1][1] + M1[0][2]*M2[2][1]) % 1000000009,
            (M1[0][0]*M2[0][2] + M1[0][1]*M2[1][2] + M1[0][2]*M2[2][2]) % 1000000009,
        ],
        [
            (M1[1][0]*M2[0][0] + M1[1][1]*M2[1][0] + M1[1][2]*M2[2][0]) % 1000000009,
            (M1[1][0]*M2[0][1] + M1[1][1]*M2[1][1] + M1[1][2]*M2[2][1]) % 1000000009,
            (M1[1][0]*M2[0][2] + M1[1][1]*M2[1][2] + M1[1][2]*M2[2][2]) % 1000000009,
        ],
        [
            (M1[2][0]*M2[0][0] + M1[2][1]*M2[1][0] + M1[2][2]*M2[2][0]) % 1000000009,
            (M1[2][0]*M2[0][1] + M1[2][1]*M2[1][1] + M1[2][2]*M2[2][1]) % 1000000009,
            (M1[2][0]*M2[0][2] + M1[2][1]*M2[1][2] + M1[2][2]*M2[2][2]) % 1000000009,
        ],
    ]

def pow(M, e):
    ans = [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
    while e != 0:
        if e % 2 == 1:
            ans = mul(M, ans)
        M = mul(M, M)
        e //= 2
    return ans

def mul2(M):
    return (M[0][0]*2 + M[0][1]*1) % 1000000009

for line in sys.stdin:
    n = int(line)
    if n == 0:
        break
    if n < 3:
        print(n-1)
        continue
    M = [[1, 1, 1], [1, 0, 0], [0, 1, 0]]
    ans = pow(M, n-3)
    print(mul2(ans))
